#############################################################################
# Makefile for building: GameRoom
# Generated by qmake (2.01a) (Qt 4.8.6) on: Wed Jan 27 14:19:14 2016
# Project:  GameRoom.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake -o Makefile GameRoom.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -std=c++11 -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -std=c++11 -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		games/game.cpp \
		gamelist.cpp \
		games/individual_game/tictactoe.cpp \
		gamestate/individual_game_states/tictactoegamestate.cpp \
		gamestate/gamestate.cpp \
		debug/debugsandbox.cpp \
		debug/unittests/testdirectory.cpp \
		ai/algorithms/minimax.cpp \
		debug/unittests/aialgorithm/aialgorithmtester.cpp \
		ai/computer_players/computerplayer.cpp \
		ai/computer_players/tictactoecomputerplayer.cpp \
		debug/cli.cpp \
		debug/unittests/gametests/checkerstests.cpp \
		debug/unittests/gametests/tictactoetests.cpp \
		gamestate/individual_game_states/checkersgamestate.cpp \
		games/individual_game/checkers.cpp \
		ai/computer_players/checkerscomputerplayer.cpp \
		debug/unittests/othertest/othertests.cpp \
		gamestate/elements/deck.cpp \
		gamestate/elements/card.cpp 
OBJECTS       = main.o \
		game.o \
		gamelist.o \
		tictactoe.o \
		tictactoegamestate.o \
		gamestate.o \
		debugsandbox.o \
		testdirectory.o \
		minimax.o \
		aialgorithmtester.o \
		computerplayer.o \
		tictactoecomputerplayer.o \
		cli.o \
		checkerstests.o \
		tictactoetests.o \
		checkersgamestate.o \
		checkers.o \
		checkerscomputerplayer.o \
		othertests.o \
		deck.o \
		card.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		GameRoom.pro
QMAKE_TARGET  = GameRoom
DESTDIR       = 
TARGET        = GameRoom

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: GameRoom.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile GameRoom.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile GameRoom.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/GameRoom1.0.0 || $(MKDIR) .tmp/GameRoom1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/GameRoom1.0.0/ && $(COPY_FILE) --parents games/game.h gamelist.h games/individual_game/tictactoe.h gamestate/individual_game_states/tictactoegamestate.h gamestate/gamestate.h debug/debugsandbox.h debug/unittests/testdirectory.h ai/algorithms/minimax.h debug/unittests/aialgorithm/aialgorithmtester.h ai/computer_players/computerplayer.h ai/computer_players/tictactoecomputerplayer.h debug/cli.h games/game_type/cardgame.h debug/unittests/gametests/checkerstests.h debug/unittests/gametests/tictactoetests.h gamestate/individual_game_states/checkersgamestate.h games/individual_game/checkers.h ai/computer_players/checkerscomputerplayer.h debug/unittests/othertest/othertests.h gamestate/elements/deck.h gamestate/elements/card.h .tmp/GameRoom1.0.0/ && $(COPY_FILE) --parents main.cpp games/game.cpp gamelist.cpp games/individual_game/tictactoe.cpp gamestate/individual_game_states/tictactoegamestate.cpp gamestate/gamestate.cpp debug/debugsandbox.cpp debug/unittests/testdirectory.cpp ai/algorithms/minimax.cpp debug/unittests/aialgorithm/aialgorithmtester.cpp ai/computer_players/computerplayer.cpp ai/computer_players/tictactoecomputerplayer.cpp debug/cli.cpp debug/unittests/gametests/checkerstests.cpp debug/unittests/gametests/tictactoetests.cpp gamestate/individual_game_states/checkersgamestate.cpp games/individual_game/checkers.cpp ai/computer_players/checkerscomputerplayer.cpp debug/unittests/othertest/othertests.cpp gamestate/elements/deck.cpp gamestate/elements/card.cpp .tmp/GameRoom1.0.0/ && (cd `dirname .tmp/GameRoom1.0.0` && $(TAR) GameRoom1.0.0.tar GameRoom1.0.0 && $(COMPRESS) GameRoom1.0.0.tar) && $(MOVE) `dirname .tmp/GameRoom1.0.0`/GameRoom1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/GameRoom1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

main.o: main.cpp debug/debugsandbox.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

game.o: games/game.cpp games/game.h \
		gamestate/gamestate.h \
		ai/computer_players/computerplayer.h \
		gamestate/individual_game_states/tictactoegamestate.h \
		ai/computer_players/tictactoecomputerplayer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o game.o games/game.cpp

gamelist.o: gamelist.cpp gamelist.h \
		games/game.h \
		gamestate/gamestate.h \
		ai/computer_players/computerplayer.h \
		games/individual_game/tictactoe.h \
		games/individual_game/checkers.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamelist.o gamelist.cpp

tictactoe.o: games/individual_game/tictactoe.cpp games/individual_game/tictactoe.h \
		games/game.h \
		gamestate/gamestate.h \
		ai/computer_players/computerplayer.h \
		ai/computer_players/tictactoecomputerplayer.h \
		gamestate/individual_game_states/tictactoegamestate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tictactoe.o games/individual_game/tictactoe.cpp

tictactoegamestate.o: gamestate/individual_game_states/tictactoegamestate.cpp gamestate/individual_game_states/tictactoegamestate.h \
		gamestate/gamestate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tictactoegamestate.o gamestate/individual_game_states/tictactoegamestate.cpp

gamestate.o: gamestate/gamestate.cpp gamestate/gamestate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o gamestate.o gamestate/gamestate.cpp

debugsandbox.o: debug/debugsandbox.cpp debug/debugsandbox.h \
		debug/unittests/testdirectory.h \
		debug/cli.h \
		games/game.h \
		gamestate/gamestate.h \
		ai/computer_players/computerplayer.h \
		debug/unittests/gametests/checkerstests.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debugsandbox.o debug/debugsandbox.cpp

testdirectory.o: debug/unittests/testdirectory.cpp debug/unittests/testdirectory.h \
		debug/unittests/gametests/tictactoetests.h \
		debug/unittests/gametests/checkerstests.h \
		debug/unittests/aialgorithm/aialgorithmtester.h \
		debug/unittests/othertest/othertests.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o testdirectory.o debug/unittests/testdirectory.cpp

minimax.o: ai/algorithms/minimax.cpp ai/algorithms/minimax.h \
		gamestate/gamestate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o minimax.o ai/algorithms/minimax.cpp

aialgorithmtester.o: debug/unittests/aialgorithm/aialgorithmtester.cpp debug/unittests/aialgorithm/aialgorithmtester.h \
		ai/algorithms/minimax.h \
		gamestate/gamestate.h \
		gamestate/individual_game_states/tictactoegamestate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o aialgorithmtester.o debug/unittests/aialgorithm/aialgorithmtester.cpp

computerplayer.o: ai/computer_players/computerplayer.cpp ai/computer_players/computerplayer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o computerplayer.o ai/computer_players/computerplayer.cpp

tictactoecomputerplayer.o: ai/computer_players/tictactoecomputerplayer.cpp ai/computer_players/tictactoecomputerplayer.h \
		ai/computer_players/computerplayer.h \
		gamestate/individual_game_states/tictactoegamestate.h \
		gamestate/gamestate.h \
		ai/algorithms/minimax.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tictactoecomputerplayer.o ai/computer_players/tictactoecomputerplayer.cpp

cli.o: debug/cli.cpp debug/cli.h \
		games/game.h \
		gamestate/gamestate.h \
		ai/computer_players/computerplayer.h \
		gamelist.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cli.o debug/cli.cpp

checkerstests.o: debug/unittests/gametests/checkerstests.cpp debug/unittests/gametests/checkerstests.h \
		gamestate/individual_game_states/checkersgamestate.h \
		gamestate/gamestate.h \
		ai/computer_players/checkerscomputerplayer.h \
		ai/computer_players/computerplayer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o checkerstests.o debug/unittests/gametests/checkerstests.cpp

tictactoetests.o: debug/unittests/gametests/tictactoetests.cpp debug/unittests/gametests/tictactoetests.h \
		gamestate/individual_game_states/tictactoegamestate.h \
		gamestate/gamestate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tictactoetests.o debug/unittests/gametests/tictactoetests.cpp

checkersgamestate.o: gamestate/individual_game_states/checkersgamestate.cpp gamestate/individual_game_states/checkersgamestate.h \
		gamestate/gamestate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o checkersgamestate.o gamestate/individual_game_states/checkersgamestate.cpp

checkers.o: games/individual_game/checkers.cpp games/individual_game/checkers.h \
		games/game.h \
		gamestate/gamestate.h \
		ai/computer_players/computerplayer.h \
		ai/computer_players/checkerscomputerplayer.h \
		gamestate/individual_game_states/checkersgamestate.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o checkers.o games/individual_game/checkers.cpp

checkerscomputerplayer.o: ai/computer_players/checkerscomputerplayer.cpp ai/computer_players/checkerscomputerplayer.h \
		ai/computer_players/computerplayer.h \
		gamestate/individual_game_states/checkersgamestate.h \
		gamestate/gamestate.h \
		ai/algorithms/minimax.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o checkerscomputerplayer.o ai/computer_players/checkerscomputerplayer.cpp

othertests.o: debug/unittests/othertest/othertests.cpp debug/unittests/othertest/othertests.h \
		gamestate/elements/card.h \
		gamestate/elements/deck.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o othertests.o debug/unittests/othertest/othertests.cpp

deck.o: gamestate/elements/deck.cpp gamestate/elements/deck.h \
		gamestate/elements/card.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o deck.o gamestate/elements/deck.cpp

card.o: gamestate/elements/card.cpp gamestate/elements/card.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o card.o gamestate/elements/card.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

